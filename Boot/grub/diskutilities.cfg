menuentry "MiniTool Partition Wizard Boot Disk 9" {
	set path="/Files/Disk/"
	set file="mpw.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		set gfxpayload=keep
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz.efi ramdisk_size=409600 root=/dev/ram0 rw
		initrd	(loop)/casper/tinycore.gz
	else
		missing ${file} ${path}
	fi
}
menuentry "Partition Guru" {
	set path="/Files/DOS/"
	set file="PartitionGuru.img"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		linux16 /Boot/memdisk raw
		initrd16 ${path}${file}
	else
		missing ${file} ${path}
	fi
}
menuentry "${phdnormal}" --class opensuse --class os {
	set gfxpayload=800x600x24,800x600x16,800x600
	set path="/Files/Disk/"
	set file="phd15efi.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/boot/x86_64/loader/linux ramdisk_size=512000 ramdisk_blocksize=4096 splash=silent panic=1
		initrd	(loop)/boot/x86_64/loader/initrd
	else
		missing ${file} ${path}
	fi
}
menuentry "${phdsafe}" --class opensuse --class os {
	set gfxpayload=800x600x24,800x600x16,800x600
	set path="/Files/Disk/"
	set file="phd15efi.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/boot/x86_64/loader/linux ramdisk_size=512000 ramdisk_blocksize=4096 splash=silent ide=nodma apm=off noresume edd=off powersaved=off nohz=off highres=off processsor.max+cstate=1 panic=1 nomodeset x11failsafe
		initrd	(loop)/boot/x86_64/loader/initrd
	else
		missing ${file} ${path}
	fi
}
if [ "$pc" ]; then
menuentry "Paragon Hard Disk Manager 15 [Legacy BIOS support]" {
	set gfxpayload=800x600x24,800x600x16,800x600
	set path="/Files/Disk/"
	set file="phd15bios.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/vmlinuzp splash=silent vga=0x314 medialable=PARAGON
		initrd	(loop)/initrd.gz
	else
		missing ${file} ${path}
	fi
}
fi
menuentry "Acronis Disk Director 12 [64-bit] " {
	set path="/Files/Acronis/"
	set file="ADD12_en-US.iso"
	if [ -e ${path}${file} ]; then
		set gfxpayload=1024x768x32,1024x768
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/dat5.dat quiet mbrcrcs=on
		initrd (loop)/dat4.dat
	else
		missing ${file} ${path}
	fi
}
menuentry "Acronis Disk Director 12 [32-bit] " {
	set path="/Files/Acronis/"
	set file="ADD12_en-US.iso"
	if [ -e ${path}${file} ]; then
		set gfxpayload=1024x768x32,1024x768
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/dat3.dat quiet mbrcrcs=on
		initrd (loop)/dat2.dat
	else
		missing ${file} ${path}
	fi
}
menuentry "Parted Magic [64-bit]" {
	set path="/Files/Linux/"
	set file="pmagic.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		set root=(loop)
		linux	/pmagic/bzImage64 iso_filename=${path}${file} directory=boot edd=on vga=normal
		initrd	/pmagic/initrd.img /pmagic/fu.img /pmagic/m64.img
	else
		missing ${file} ${path}
	fi
}
if [ "$pc" ]; then
menuentry "Parted Magic [32-bit]" {
	set path="/Files/Linux/"
	set file="pmagic.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		set root=(loop)
		linux	/pmagic/bzImage iso_filename=${path}${file} directory=boot edd=on vga=normal
		initrd	/pmagic/initrd.img /pmagic/fu.img /pmagic/m32.img
	else
		missing ${file} ${path}
	fi
}
fi
menuentry "GParted Live" --class gparted {
	set path="/Files/Linux/"
	set file="gparted-live-amd64.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap noeject vga=791 ip=frommedia nosplash findiso=${path}${file}
		initrd (loop)/live/initrd.img
	else
		missing ${file} ${path}
	fi
}
submenu "System Rescue CD" {
	set path="/Files/Linux/"
	set file="systemrescuecd.iso"
	if [ -e ${path}${file} ]; then
		menuentry "System RescueCD std-64bit (cached to RAM)" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/rescue64 isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD std-64bit" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/rescue64 isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD alt-64bit (cached to RAM)" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/altker64 isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD alt-64bit" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/altker64 isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		if [ "$pc" ]; then
		menuentry "System RescueCD std-32bit (cached to RAM)" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/rescue32 isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD std-32bit" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/rescue32 isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD alt-32bit (cached to RAM)" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/altker32 isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD alt-32bit" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/altker32 isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		# Utilities from System RescueCD
		menuentry "Hardware Diagnostics Tool" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux16 (loop)/isolinux/memdisk floppy
			initrd16 (loop)/bootdisk/hdt.img
		}
		menuentry "Memtest86+" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux16 (loop)/bootdisk/memtestp
		}
		# Netboot doesn't work
		# FreeDOS doesn't work
		menuentry "Offline Windows Password & Registry Editor" --class windows {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/ntpasswd/vmlinuz rw vga=1 /boot/files/sysrescd/ntpasswd/scsi.c
			initrd (loop)/ntpasswd/initrd.cgz
		}
		menuentry "SGD: Super Grub2 Disk" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux16 (loop)/isolinux/memdisk floppy raw
			initrd16 (loop)/bootdisk/grubdisk.img
		}
		# AIDA doesn't work
		# GAG doesn't work
		menuentry "Darik's Boot and Nuke" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			#linux (loop)/bootdisk/dban.bzi nuke="dwipe" silent
			linux (loop)/bootdisk/dban.bzi
		}
		menuentry "MHDD: Low-level Hard Drive diagnostic tool" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux16 (loop)/isolinux/memdisk floppy
			initrd16 (loop)/bootdisk/mhdd.img
		}
		fi
	else
		missing ${file} ${path}
	fi
}