menuentry "[1] MiniTool Partition Wizard Boot Disk 9" --hotkey=1 {
	set path="/Files/Disk/"
	set file="mpw.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		set gfxpayload=keep
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz.efi ramdisk_size=409600 root=/dev/ram0 rw
		initrd	(loop)/casper/tinycore.gz
	fi
}
menuentry "[2] Partition Guru" --hotkey=2 {
	set path="/Files/DOS/"
	set file="PartitionGuru.img"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		linux16 ${memdisk} raw
		initrd16 ${path}${file}
	fi
}
menuentry "[3] ${phdnormal}" --hotkey=3 --class opensuse --class os {
	set gfxpayload=800x600x24,800x600x16,800x600
	set path="/Files/Disk/"
	set file="phd15efi.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/boot/x86_64/loader/linux ramdisk_size=512000 ramdisk_blocksize=4096 splash=silent panic=1
		initrd	(loop)/boot/x86_64/loader/initrd
	fi
}
menuentry "[4] ${phdsafe}" --hotkey=4 --class opensuse --class os {
	set gfxpayload=800x600x24,800x600x16,800x600
	set path="/Files/Disk/"
	set file="phd15efi.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/boot/x86_64/loader/linux ramdisk_size=512000 ramdisk_blocksize=4096 splash=silent ide=nodma apm=off noresume edd=off powersaved=off nohz=off highres=off processsor.max+cstate=1 panic=1 nomodeset x11failsafe
		initrd	(loop)/boot/x86_64/loader/initrd
	fi
}
menuentry "[5] Acronis Disk Director 12 [64-bit]" --hotkey=5 {
	set path="/Files/Acronis/"
	set file="ADD12_en-US.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		set gfxpayload=1024x768x32,1024x768
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/dat5.dat quiet mbrcrcs=on
		initrd (loop)/dat4.dat
	fi
}
menuentry "[6] Parted Magic [64-bit]" --hotkey=6 {
	set path="/Files/Linux/"
	set file="pmagic.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		set root=(loop)
		linux	/pmagic/bzImage64 iso_filename=${path}${file} directory=boot edd=on vga=normal
		initrd	/pmagic/initrd.img /pmagic/fu.img /pmagic/m64.img
	fi
}
menuentry "[7] GParted Live" --hotkey=7 --class gparted {
	set path="/Files/Linux/"
	set file="gparted-live-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap noeject vga=791 ip=frommedia nosplash findiso=${path}${file}
		initrd	(loop)/live/initrd.img
	fi
}
submenu "[8] System Rescue CD" --hotkey=8 {
	set path="/Files/Linux/"
	set file="systemrescuecd.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		menuentry "[1] SystemRescueCd: default boot options" --hotkey=1 --class gentoo {
			set gfxpayload=1024x768x32,1024x768
			echo "${loading} System Rescue CD... ${plswait}"
			linux	(loop)/isolinux/rescue${_SPEC_ARCH} isoloop=${path}${file} scandelay=1 setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "[2] SystemRescueCd: all files cached to memory (docache)" --hotkey=2 --class gentoo {
			echo "${loading} System Rescue CD... ${plswait}"
			linux	(loop)/isolinux/rescue${_SPEC_ARCH} isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "[3] SystemRescueCd: alternative kernel with default boot options" --hotkey=3 --class gentoo {
			echo "${loading} System Rescue CD... ${plswait}"
			linux	(loop)/isolinux/altker${_SPEC_ARCH} isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "[4] SystemRescueCd: alternative kernel (all files cached to memory (docache))" --hotkey=4 --class gentoo {
			echo "${loading} System Rescue CD... ${plswait}"
			linux	(loop)/isolinux/altker${_SPEC_ARCH} isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		if [ "$pc" ]; then
		menuentry "[5] MEMTEST: Memory test using Memtest86+" --hotkey=5 --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		(loop)/bootdisk/memtestp
		}
		menuentry "[6] NTPASSWD: Reset or edit Windows passwords" --hotkey=6 --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		(loop)/ntpasswd/vmlinuz rw vga=1
			initrd16	(loop)/ntpasswd/initrd.cgz (loop)/ntpasswd/scsi.cgz
		}
		menuentry "[7] SGD: Super Grub2 Disk" --hotkey=7 --class windows {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy raw
			initrd16	(loop)/bootdisk/grubdisk.img
		}
		menuentry "[8] FREEDOS: Clone of the MSDOS Operating System" --hotkey=8 --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/freedos.img
		}
		menuentry "[9] NETBOOT: Boot from the network" --hotkey=9 --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16	(loop)/isolinux/netboot -
		}
		menuentry "[a] HDT: recent hardware diagnostics tool" --hotkey=a --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/hdt.img
		}
		menuentry "[b] AIDA: old hardware diagnostics tool" --hotkey=b --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/aida.img
		}
		menuentry "[d] GAG: Graphical Boot Manager" --hotkey=d --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/gag.img
		}
		menuentry "[f] DBAN: erase all data from the disk" --hotkey=f --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		(loop)/bootdisk/dban.bzi nuke="dwipe" silent
		}
		menuentry "[g] MHDD: Low-level Hard Drive diagnostic tool" --hotkey=g --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/mhdd.img
		}
		fi
	fi
}
if [ "$pc" ]; then
menuentry "[9] Paragon Hard Disk Manager 15 [Legacy BIOS support]" --hotkey=9 {
	set gfxpayload=800x600x24,800x600x16,800x600
	set path="/Files/Disk/"
	set file="phd15bios.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/vmlinuzp splash=silent vga=0x314 medialable=PARAGON
		initrd	(loop)/initrd.gz
	fi
}
menuentry "[a] Acronis Disk Director 12 [32-bit]" --hotkey=a {
	set path="/Files/Acronis/"
	set file="ADD12_en-US.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		set gfxpayload=1024x768x32,1024x768
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/dat3.dat quiet mbrcrcs=on
		initrd (loop)/dat2.dat
	fi
}
menuentry "[d] Parted Magic [32-bit]" --hotkey=d {
	set path="/Files/Linux/"
	set file="pmagic.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		set root=(loop)
		linux	/pmagic/bzImage iso_filename=${path}${file} directory=boot edd=on vga=normal
		initrd	/pmagic/initrd.img /pmagic/fu.img /pmagic/m32.img
	fi
}
fi
menuentry "[b] ${backcfg}" --hotkey=b {
	configfile ${prefix}/main.cfg
}