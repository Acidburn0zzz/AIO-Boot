set path="/Files/Linux/"
export path

menuentry "[1] Ubuntu 16.04 Desktop [64-bit]" --hotkey=1 {
	set file="ubuntu-16.04-desktop-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${path}${file} quiet splash
		initrd	(loop)/casper/initrd.lz
	fi
}

menuentry "[2] Parted Magic [64-bit]" --hotkey=2 {
	set file="pmagic.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		set root=(loop)
		linux	/pmagic/bzImage64 iso_filename=${path}${file} directory=boot edd=on vga=normal
		initrd	/pmagic/initrd.img /pmagic/fu.img /pmagic/m64.img
	fi
}

menuentry "[3] Linux Mint [64-bit]" --hotkey=3 --class linuxmint {
	set file="linuxmint-64bit.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz file=/cdrom/preseed/linuxmint.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
		initrd	(loop)/casper/initrd.lz
	fi
}

menuentry "[4] Lubuntu 16.04 Desktop [64-bit]" --hotkey=4 --class linuxmint {
	set file="lubuntu-16.04-desktop-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz.efi file=/cdrom/preseed/lubuntu.seed boot=casper iso-scan/filename=${path}${file} quiet splash ---
		initrd	(loop)/casper/initrd.lz
	fi
}

menuentry "[5] Arch Linux" --hotkey=5 {
	set file="archlinux.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		probe -u $root --set=uuid
		linux	(loop)/arch/boot/x86_64/vmlinuz img_dev=/dev/disk/by-uuid/$uuid img_loop=${path}${file}
		initrd	(loop)/arch/boot/x86_64/archiso.img
	fi
}

menuentry "[6] Kali Linux [64-bit]" --hotkey=6 --class kali {
	set file="kali-linux-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/live/vmlinuz boot=live findiso=${path}${file} noconfig=sudo username=root hostname=kali quiet splash
		initrd (loop)/live/initrd.img
	fi
}

menuentry "[7] Wifislax [KDE Desktop]" --hotkey=7 {
	set file="wifislax.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/boot/vmlinuz2 noload=000-Ker';'006-Xfce load=English from=${path}${file} autoexec=startx
		initrd	(loop)/boot/initrd.xz
	fi
}

submenu "[8] CentOS 7 Minimal CD" --hotkey=8 {
	set gfxpayload=keep
	insmod gzio
	insmod part_gpt
	insmod ext2
	probe -u $root --set=uuid
	set file="CentOS-7-x86_64-Minimal.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		menuentry "[1] Install CentOS 7" --hotkey=1 --class fedora --class gnu-linux --class gnu --class os {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/images/pxeboot/vmlinuz inst.stage2=hd:UUID=$uuid:${path}${file} quiet
			initrd	(loop)/images/pxeboot/initrd.img
		}
		menuentry "[2] Test this media & install CentOS 7" --hotkey=2 --class fedora --class gnu-linux --class gnu --class os {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/images/pxeboot/vmlinuz inst.stage2=hd:UUID=$uuid:${path}${file} rd.live.check quiet
			initrd	(loop)/images/pxeboot/initrd.img
		}
		menuentry "[3] Install CentOS 7 in basic graphics mode" --hotkey=3 --class fedora --class gnu-linux --class gnu --class os {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linuxe	(loop)/images/pxeboot/vmlinuz inst.stage2=hd:UUID=$uuid:${path}${file} xdriver=vesa nomodeset quiet
			initrd	(loop)/images/pxeboot/initrd.img
		}
		menuentry "[4] Rescue a CentOS system" --hotkey=4 --class fedora --class gnu-linux --class gnu --class os {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/images/pxeboot/vmlinuz inst.stage2=hd:UUID=$uuid:${path}${file} rescue quiet
			initrd	(loop)/images/pxeboot/initrd.img
		}
	fi
}

submenu "[9] CentOS Linux 7 Live GNOME" --hotkey=9 {
	set gfxpayload=keep
	insmod gzio
	insmod part_gpt
	probe -u $root --set=uuid
	set file="CentOS-7-x86_64-LiveGNOME.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		probe -l (loop) --set=isolabel
		menuentry "[1] Start CentOS Linux 7 GNOME" --hotkey=1 --class fedora --class gnu-linux --class gnu --class os {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/vmlinuz0 root=live:LABEL=${isolabel} ro rd.live.image quiet rhgb iso-scan/filename=${path}${file}
			initrd	(loop)/isolinux/initrd0.img
		}
		menuentry "[2] Test this media & start CentOS Linux 7 GNOME" --hotkey=2 --class fedora --class gnu-linux --class gnu --class os {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/vmlinuz0 root=live:LABEL=${isolabel} ro rd.live.image quiet rhgb rd.live.check iso-scan/filename=${path}${file}
			initrd	(loop)/isolinux/initrd0.img
		}
		menuentry "[3] Start CentOS Linux 7 GNOME in basic graphics mode" --hotkey=3 --class fedora --class gnu-linux --class gnu --class os {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/vmlinuz0 root=live:LABEL=${isolabel} ro rd.live.image quiet rhgb nomodeset iso-scan/filename=${path}${file}
			initrd	(loop)/isolinux/initrd0.img
		}
	fi
}

submenu "[a] System Rescue CD" --hotkey=a {
	set path="/Files/Linux/"
	set file="systemrescuecd.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		menuentry "[1] SystemRescueCd: default boot options" --hotkey=1 --class gentoo {
			set gfxpayload=1024x768x32,1024x768
			echo "${loading} System Rescue CD... ${plswait}"
			linux	(loop)/isolinux/rescue${_SPEC_ARCH} isoloop=${path}${file} scandelay=1 setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "[2] SystemRescueCd: all files cached to memory (docache)" --hotkey=2 --class gentoo {
			echo "${loading} System Rescue CD... ${plswait}"
			linux	(loop)/isolinux/rescue${_SPEC_ARCH} isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "[3] SystemRescueCd: alternative kernel with default boot options" --hotkey=3 --class gentoo {
			echo "${loading} System Rescue CD... ${plswait}"
			linux	(loop)/isolinux/altker${_SPEC_ARCH} isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "[4] SystemRescueCd: alternative kernel (all files cached to memory (docache))" --hotkey=4 --class gentoo {
			echo "${loading} System Rescue CD... ${plswait}"
			linux	(loop)/isolinux/altker${_SPEC_ARCH} isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		if [ "$pc" ]; then
		menuentry "[5] MEMTEST: Memory test using Memtest86+" --hotkey=5 --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		(loop)/bootdisk/memtestp
		}
		menuentry "[6] NTPASSWD: Reset or edit Windows passwords" --hotkey=6 --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		(loop)/ntpasswd/vmlinuz rw vga=1
			initrd16	(loop)/ntpasswd/initrd.cgz (loop)/ntpasswd/scsi.cgz
		}
		menuentry "[7] SGD: Super Grub2 Disk" --hotkey=7 --class windows {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy raw
			initrd16	(loop)/bootdisk/grubdisk.img
		}
		menuentry "[8] FREEDOS: Clone of the MSDOS Operating System" --hotkey=8 --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/freedos.img
		}
		menuentry "[9] NETBOOT: Boot from the network" --hotkey=9 --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16	(loop)/isolinux/netboot -
		}
		menuentry "[a] HDT: recent hardware diagnostics tool" --hotkey=a --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/hdt.img
		}
		menuentry "[b] AIDA: old hardware diagnostics tool" --hotkey=b --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/aida.img
		}
		menuentry "[d] GAG: Graphical Boot Manager" --hotkey=d --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/gag.img
		}
		menuentry "[f] DBAN: erase all data from the disk" --hotkey=f --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		(loop)/bootdisk/dban.bzi nuke="dwipe" silent
		}
		menuentry "[g] MHDD: Low-level Hard Drive diagnostic tool" --hotkey=g --class gear {
			echo "${loading} System Rescue CD... ${plswait}"
			linux16		${memdisk} floppy
			initrd16	(loop)/bootdisk/mhdd.img
		}
		fi
	fi
}

menuentry "[d] Debian Live 8 [64-bit]" --hotkey=d --class debian {
	set file="debian-live-8-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/live/vmlinuz boot=live findiso=${path}${file} components quiet splash
		initrd (loop)/live/initrd.img
	fi
}

menuentry "[f] Fedora 23 Live Workstation [64-bit]" --hotkey=f --class fedora {
	set file="Fedora-Live-Workstation.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		probe -l (loop) --set=isolabel
		linux (loop)/isolinux/vmlinuz0 root=live:CDLABEL=${isolabel} rootfstype=auto ro rd.live.image quiet rhgb rd.luks=0 rd.md=0 rd.dm=0 iso-scan/filename=${path}${file}
		initrd (loop)/isolinux/initrd0.img
	fi
}

menuentry "[g] elementary OS [64-bit]" --hotkey=g {
	set file="elementaryos-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} quiet splash --
		initrd	(loop)/casper/initrd.lz
	fi
}

menuentry "[h] Manjaro Linux [64-bit]" --hotkey=h {
	set file="manjaro-x86_64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		probe -u $root --set=rootuuid
		loopback loop ${path}${file}
		probe -l (loop) --set=isolabel
		linux	(loop)/manjaro/boot/x86_64/manjaro img_dev=/dev/disk/by-uuid/${rootuuid} img_loop=${path}${file} misobasedir=manjaro misolabel=${isolabel} nouveau.modeset=1 i915.modeset=1 radeon.modeset=1 logo.nologo overlay=free quiet splash showopts
		initrd	(loop)/manjaro/boot/intel_ucode.img (loop)/manjaro/boot/x86_64/manjaro.img
	fi
}

menuentry "[i] DEFT-Zero Linux Live (GUI mode)" --hotkey=i {
	set file="deft.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		set gfxpayload=keep
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz file=/cdrom/preseed/lubuntu.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
		initrd	(loop)/casper/initrd.lz
	fi
}

menuentry "[j] Parrot Security OS" --hotkey=j {
	set file="parrot.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/live/vmlinuz boot=live config boot=live noconfig=sudo username=root hostname=parrot boot=live noconfig=sudo username=root hostname=parrot findiso=${path}${file}
		initrd	(loop)/live/initrd.img
	fi
}

menuentry "[k] Network Security Toolkit" --hotkey=k {
	set file="nst.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		probe -l (loop) --set=isolabel
		linux	(loop)/isolinux/vmlinuz0 root=CDLABEL=${isolabel} rootfstype=auto ro rd.live.image rd.luks=0 rd.md=0 rd.dm=0 audit=0 systemd.unit=graphical.target nstrelocate=false iso-scan/filename=${path}${file}
		initrd	(loop)/isolinux/initrd0.img
	fi
}

menuentry "[l] BackBox Linux [64-bit]" --hotkey=l {
	set file="backbox-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz.efi file=/cdrom/preseed/backbox.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
		initrd	(loop)/casper/initrd.gz
	fi
}
		
menuentry "[m] Tails Live [64-bit]" --hotkey=m {
	set file="tails.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/live/vmlinuz2 findiso=${path}${file} boot=live config live-media=removable apparmor=1 security=apparmor nopersistence noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails quiet
		initrd (loop)/live/initrd2.img
	fi
}

menuentry "[n] Solus Operating System" --hotkey=n {
	set file="Solus.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/boot/kernel iso-scan/filename=${path}${file} root=live:CDLABEL=SolusLive ro rd.luks=0 rd.md=0 quiet splash --
		initrd	(loop)/boot/initrd.img
	fi
}

menuentry "[o] Slackware 14.1 install (DVD)" --hotkey=o {
	set file="slackware64-14.1-install-dvd.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/kernels/huge.s/bzImage vga=normal load_ramdisk=1 prompt_ramdisk=0 ro printk.time=0 nomodeset SLACK_KERNEL=huge.s
		initrd (loop)/isolinux/initrd.img
	fi
}

menuentry "[p] Gentoo Minimal Installation CD [64-bit]" --hotkey=p {
	set file="install-amd64-minimal.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/isolinux/gentoo root=/dev/ram0 init=/linuxrc dokeymap looptype=squashfs loop=/image.squashfs cdroot initrd=gentoo.igz isoboot=${path}${file} 
		initrd (loop)/isolinux/gentoo.igz
	fi
}

menuentry "[q] openSUSE Tumbleweed GNOME/KDE Live [64-bit]" --hotkey=q {
	set file="openSUSE-Tumbleweed-Live-x86_64-Current.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/boot/x86_64/loader/linux isofrom_device=$imgdevpath isofrom_system=${path}${file} LANG=en_US.UTF-8
		initrd (loop)/boot/x86_64/loader/initrd
	fi
}

menuentry "[r] Clonezilla Live amd64" --hotkey=r {
	set file="clonezilla-live-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap nolocales edd=on nomodeset nodmraid ocs_live_run=\"ocs-live-general\" ocs_live_extra_param=\"\" keyboard-layouts= ocs_live_batch=\"no\" locales= vga=788 ip=frommedia nosplash toram=filesystem.squashfs findiso=${path}${file}
		initrd	(loop)/live/initrd.img
	fi
}

menuentry "[s] GParted Live amd64" --hotkey=s --class gparted {
	set file="gparted-live-amd64.iso"
	findfile ${file} ${path}
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/live/vmlinuz boot=live username=user config components quiet noswap noeject ip= nosplash toram=filesystem.squashfs findiso=${path}${file}
		initrd (loop)/live/initrd.img
	fi
}
submenu "[u] ${ubotherv}" --hotkey=u {
	menuentry "[1] Ubuntu 15.10 Desktop [64-bit]" --hotkey=1 {
		set file="ubuntu-15.10-desktop-amd64.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		fi
	}
	menuentry "[2] Ubuntu 14.04 Desktop [64-bit]" --hotkey=2 {
		set file="ubuntu-14.04.4-desktop-amd64.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		fi
	}
	menuentry "[3] Ubuntu 12.04 Desktop [64-bit]" --hotkey=3 {
		set file="ubuntu-12.04.5-desktop-amd64.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${path}${file} noprompt noeject
			initrd	(loop)/casper/initrd.lz
		fi
	}
	menuentry "[4] Ubuntu 16.04 Desktop [32-bit]" --hotkey=4 {
		set file="ubuntu-16.04-desktop-i386.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		fi
	}
	menuentry "[5] Ubuntu 15.10 Desktop [32-bit]" --hotkey=5 {
		set file="ubuntu-15.10-desktop-i386.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		fi
	}
	menuentry "[6] Ubuntu 14.04 Desktop [32-bit]" --hotkey=6 {
		set file="ubuntu-14.04.4-desktop-i386.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		fi
	}
	menuentry "[7] Ubuntu 12.04 Desktop [32-bit]" --hotkey=7 {
		set file="ubuntu-12.04.5-desktop-i386.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} noprompt noeject
			initrd	(loop)/casper/initrd.lz
		fi
	}
}
submenu "[w] ${other32v}" --hotkey=w {
	menuentry "[1] Lubuntu 16.04 Desktop [32-bit]" --hotkey=1 --class linuxmint {
		set file="lubuntu-16.04-desktop-i386.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz file=/cdrom/preseed/lubuntu.seed boot=casper iso-scan/filename=${path}${file} quiet splash ---
			initrd	(loop)/casper/initrd.lz
		fi
	}
	menuentry "[2] Debian Live 8 [32-bit]" --hotkey=2 --class debian {
		set file="debian-live-8-i386.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/live/vmlinuz boot=live findiso=${path}${file} components quiet splash
			initrd (loop)/live/initrd.img
		fi
	}
	menuentry "[3] Linux Mint [32-bit]" --hotkey=3 --class linuxmint {
		set file="linuxmint-32bit.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/casper/vmlinuz file=/cdrom/preseed/linuxmint.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
			initrd (loop)/casper/initrd.lz
		fi
	}
	menuentry "[4] Tails Live [32-bit]" --hotkey=4 {
		set file="tails.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/live/vmlinuz findiso=${path}${file} boot=live config live-media=removable apparmor=1 security=apparmor nopersistence noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails quiet
			initrd (loop)/live/initrd.img
		fi
	}
	menuentry "[5] openSUSE Tumbleweed GNOME/KDE Live [32-bit]" --hotkey=5 {
		set file="openSUSE-Tumbleweed-Live-i686-Current.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/boot/i386/loader/linux isofrom_device=$imgdevpath isofrom_system=${path}${file} LANG=en_US.UTF-8
			initrd (loop)/boot/i386/loader/initrd
		fi
	}
	menuentry "[6] elementary OS [32-bit]" --hotkey=6 {
		set file="elementaryos-i386.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} quiet splash --
			initrd	(loop)/casper/initrd.lz
		fi
	}
	menuentry "[7] BackBox Linux [32-bit]" --hotkey=7 {
		set file="backbox-i386.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz file=/cdrom/preseed/backbox.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
			initrd	(loop)/casper/initrd.gz
		fi
	}
	menuentry "[8] Manjaro Linux [32-bit]" --hotkey=8 {
		set file="manjaro-i686.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			probe -u $root --set=rootuuid
			loopback loop ${path}${file}
			probe -l (loop) --set=isolabel
			linux	(loop)/manjaro/boot/i686/manjaro img_dev=/dev/disk/by-uuid/${rootuuid} img_loop=${path}${file} misobasedir=manjaro misolabel=${isolabel} nouveau.modeset=1 i915.modeset=1 radeon.modeset=1 logo.nologo overlay=free quiet splash showopts
			initrd	(loop)/manjaro/boot/intel_ucode.img (loop)/manjaro/boot/i686/manjaro.img
		fi
	}
	menuentry "[9] Parted Magic [32-bit]" --hotkey=9 {
		set file="pmagic.iso"
		findfile ${file} ${path}
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			set root=(loop)
			linux	/pmagic/bzImage iso_filename=${path}${file} directory=boot edd=on vga=normal
			initrd	/pmagic/initrd.img /pmagic/fu.img /pmagic/m32.img
		fi
	}
	menuentry "[a] Slacko Puppy [32-bit]" --hotkey=a --class icon-bit  {
		search --file --no-floppy --set=root /Files/Linux/slacko/vmlinuz
		if [ -e /Files/Linux/slacko/vmlinuz ]; then
			echo "${loading} Slacko Puppy... ${plswait}"
			linux	/Files/Linux/slacko/vmlinuz psubdir=/Files/Linux/slacko/ psubok=TRUE
			initrd	/Files/Linux/slacko/initrd.gz
		else
			extract "slacko-xxx-uefi.iso" "/Files/Linux/slacko/" "http://puppylinux.com/index.html#download"
		fi
	}
}
menuentry "[x] Slacko Puppy [64-bit]" --hotkey=x --class icon-bit  {
	search --file --no-floppy --set=root /Files/Linux/slacko64/vmlinuz
	if [ -e /Files/Linux/slacko64/vmlinuz ]; then
		echo "${loading} Slacko Puppy... ${plswait}"
		linux	/Files/Linux/slacko64/vmlinuz psubdir=/Files/Linux/slacko64/ psubok=TRUE
		initrd	/Files/Linux/slacko64/initrd.gz
	else
		extract "slacko64-xxx-uefi.iso" "/Files/Linux/slacko64/" "http://puppylinux.com/index.html#download"
	fi
}
menuentry "[b] ${backcfg}" --hotkey=b {
	configfile ${prefix}/main.cfg
}