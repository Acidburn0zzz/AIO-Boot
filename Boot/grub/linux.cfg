set path="/Files/Linux/"
export path

menuentry "Ubuntu 16.04 Desktop [64-bit]" {
	set file="ubuntu-16.04-desktop-amd64.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${path}${file} quiet splash
		initrd	(loop)/casper/initrd.lz
	else
		missing ${file} ${path}
	fi
}

menuentry "Parted Magic [64-bit]" {
	set file="pmagic.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		set root=(loop)
		linux	/pmagic/bzImage64 iso_filename=${path}${file} directory=boot edd=on vga=normal
		initrd	/pmagic/initrd.img /pmagic/fu.img /pmagic/m64.img
	else
		missing ${file} ${path}
	fi
}

menuentry 'Arch Linux' {
	set file="archlinux.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		probe -u $root --set=uuid
		linux	(loop)/arch/boot/x86_64/vmlinuz img_dev=/dev/disk/by-uuid/$uuid img_loop=${path}${file}
		initrd	(loop)/arch/boot/x86_64/archiso.img
	else
		missing ${file} ${path}
	fi
}

menuentry "Linux Mint 17.3 [64-bit]" --class linuxmint {
	set file="linuxmint-17.3-64bit.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz file=/cdrom/preseed/linuxmint.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
		initrd	(loop)/casper/initrd.lz
	else
		missing ${file} ${path}
	fi
}

menuentry "Kali Linux [64-bit]" --class kali {
	set file="kali-linux-amd64.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/live/vmlinuz boot=live findiso=${path}${file} noconfig=sudo username=root hostname=kali quiet splash
		initrd (loop)/live/initrd.img
	else
		missing ${file} ${path}
	fi
}

menuentry "Wifislax [KDE Desktop]" {
	set path="/Files/Linux/"
	set file="wifislax.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/boot/vmlinuz2 noload=000-Ker';'006-Xfce load=English from=${path}${file} autoexec=startx
		initrd	(loop)/boot/initrd.xz
	else
		missing ${file} ${path}
	fi
}

submenu 'CentOS 7 Minimal CD' {
	set gfxpayload=keep
	insmod gzio
	insmod part_gpt
	insmod ext2
	probe -u $root --set=uuid
	set file="CentOS-7-x86_64-Minimal.iso"
	menuentry 'Install CentOS 7' --class fedora --class gnu-linux --class gnu --class os {
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/images/pxeboot/vmlinuz inst.stage2=hd:UUID=$uuid:${path}${file} quiet
			initrd	(loop)/images/pxeboot/initrd.img
		else
			missing ${file} ${path}
		fi
	}
	menuentry 'Test this media & install CentOS 7' --class fedora --class gnu-linux --class gnu --class os {
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/images/pxeboot/vmlinuz inst.stage2=hd:UUID=$uuid:${path}${file} rd.live.check quiet
			initrd	(loop)/images/pxeboot/initrd.img
		else
			missing ${file} ${path}
		fi
	}
	menuentry 'Install CentOS 7 in basic graphics mode' --class fedora --class gnu-linux --class gnu --class os {
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linuxe	(loop)/images/pxeboot/vmlinuz inst.stage2=hd:UUID=$uuid:${path}${file} xdriver=vesa nomodeset quiet
			initrd	(loop)/images/pxeboot/initrd.img
		else
			missing ${file} ${path}
		fi
	}
	menuentry 'Rescue a CentOS system' --class fedora --class gnu-linux --class gnu --class os {
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/images/pxeboot/vmlinuz inst.stage2=hd:UUID=$uuid:${path}${file} rescue quiet
			initrd	(loop)/images/pxeboot/initrd.img
		else
			missing ${file} ${path}
		fi
	}
}

submenu 'CentOS Linux 7 Live GNOME' {
	set gfxpayload=keep
	insmod gzio
	insmod part_gpt
	probe -u $root --set=uuid
	set file="CentOS-7-x86_64-LiveGNOME.iso"
	menuentry 'Start CentOS Linux 7 1603 GNOME' --class fedora --class gnu-linux --class gnu --class os {
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/vmlinuz0 root=live:LABEL=CentOS-7-x86_64-GNOME-1603-02 ro rd.live.image quiet rhgb iso-scan/filename=${path}${file}
			initrd	(loop)/isolinux/initrd0.img
		else
			missing ${file} ${path}
		fi
	}
	menuentry 'Test this media & start CentOS Linux 7 1603 GNOME' --class fedora --class gnu-linux --class gnu --class os {
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/vmlinuz0 root=live:LABEL=CentOS-7-x86_64-GNOME-1603-02 ro rd.live.image quiet rhgb rd.live.check iso-scan/filename=${path}${file}
			initrd	(loop)/isolinux/initrd0.img
		else
			missing ${file} ${path}
		fi
	}
	menuentry 'Start CentOS Linux 7 1603 GNOME in basic graphics mode' --class fedora --class gnu-linux --class gnu --class os {
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/vmlinuz0 root=live:LABEL=CentOS-7-x86_64-GNOME-1603-02 ro rd.live.image quiet rhgb nomodeset iso-scan/filename=${path}${file}
			initrd	(loop)/isolinux/initrd0.img
		else
			missing ${file} ${path}
		fi
	}
}

submenu "System Rescue CD" {
	set file="systemrescuecd.iso"
	if [ -e ${path}${file} ]; then
		menuentry "System RescueCD std-64bit (cached to RAM)" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/rescue64 isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD std-64bit" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/rescue64 isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD alt-64bit (cached to RAM)" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/altker64 isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD alt-64bit" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/altker64 isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		if [ "$pc" ]; then
		menuentry "System RescueCD std-32bit (cached to RAM)" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/rescue32 isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD std-32bit" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/rescue32 isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD alt-32bit (cached to RAM)" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/altker32 isoloop=${path}${file} setkmap=us dostartx docache
			initrd	(loop)/isolinux/initram.igz
		}
		menuentry "System RescueCD alt-32bit" --class gentoo {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/isolinux/altker32 isoloop=${path}${file} setkmap=us dostartx
			initrd	(loop)/isolinux/initram.igz
		}
		# Utilities from System RescueCD
		menuentry "Hardware Diagnostics Tool" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux16 (loop)/isolinux/memdisk floppy
			initrd16 (loop)/bootdisk/hdt.img
		}
		menuentry "Memtest86+" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux16 (loop)/bootdisk/memtestp
		}
		# Netboot doesn't work
		# FreeDOS doesn't work
		menuentry "Offline Windows Password & Registry Editor" --class windows {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/ntpasswd/vmlinuz rw vga=1 /boot/files/sysrescd/ntpasswd/scsi.c
			initrd (loop)/ntpasswd/initrd.cgz
		}
		menuentry "SGD: Super Grub2 Disk" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux16 (loop)/isolinux/memdisk floppy raw
			initrd16 (loop)/bootdisk/grubdisk.img
		}
		# AIDA doesn't work
		# GAG doesn't work
		menuentry "Darik's Boot and Nuke" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			#linux (loop)/bootdisk/dban.bzi nuke="dwipe" silent
			linux (loop)/bootdisk/dban.bzi
		}
		menuentry "MHDD: Low-level Hard Drive diagnostic tool" --class gear {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux16 (loop)/isolinux/memdisk floppy
			initrd16 (loop)/bootdisk/mhdd.img
		}
		fi
	else
		missing ${file} ${path}
	fi
}

menuentry "Debian Live 8 [64-bit]" --class debian {
	set file="debian-live-8.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/live/vmlinuz boot=live findiso=${path}${file} components quiet splash
		initrd (loop)/live/initrd.img
	else
		missing ${file} ${path}
	fi
}

menuentry "Fedora 23 Live Workstation [64-bit]" --class fedora {
	set file="Fedora-Live-Workstation-x86_64-23-10.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/isolinux/vmlinuz0 root=live:CDLABEL=Fedora-Live-WS-x86_64-23-10 rootfstype=auto ro rd.live.image quiet rhgb rd.luks=0 rd.md=0 rd.dm=0 iso-scan/filename=${path}${file}
		initrd (loop)/isolinux/initrd0.img
	else
		missing ${file} ${path}
	fi
}

menuentry "DEFT-Zero Linux Live (GUI mode)" {
	set file="deft.iso"
	if [ -e ${path}${file} ]; then
		set gfxpayload=keep
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz file=/cdrom/preseed/lubuntu.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
		initrd	(loop)/casper/initrd.lz
	else
		missing ${file} ${path}
	fi
}

menuentry "Parrot Security OS" {
	set file="parrot.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/live/vmlinuz boot=live config boot=live noconfig=sudo username=root hostname=parrot boot=live noconfig=sudo username=root hostname=parrot findiso=${path}${file}
		initrd	(loop)/live/initrd.img
	else
		missing ${file} ${path}
	fi
}

menuentry "Network Security Toolkit" {
	set file="nst.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/isolinux/vmlinuz0 root=CDLABEL=nst-22-7334.i686 rootfstype=auto ro rd.live.image rd.luks=0 rd.md=0 rd.dm=0 audit=0 systemd.unit=graphical.target nstrelocate=false iso-scan/filename=${path}${file}
		initrd	(loop)/isolinux/initrd0.img
	else
		missing ${file} ${path}
	fi
}

menuentry "BackBox Linux amd64" {
	set file="backbox.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/casper/vmlinuz.efi file=/cdrom/preseed/backbox.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
		initrd	(loop)/casper/initrd.gz
	else
		missing ${file} ${path}
	fi
}

submenu "Tails Live" {
	set file="tails-i386.iso"
	if [ -e ${path}${file} ]; then
		if [ "$pc" ]; then
		menuentry "Tails Live [32-bit]" {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/live/vmlinuz findiso=${path}${file} boot=live config live-media=removable apparmor=1 security=apparmor nopersistence noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails quiet
			initrd (loop)/live/initrd.img
		}
		menuentry "Tails Live [32-bit failsafe]" {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/live/vmlinuz findiso=${path}${file} initrd.img boot=live config live-media=removable apparmor=1 security=apparmor nopersistence noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  noapic noapm nodma nomce nolapic nomodeset nosmp vga=normal
			initrd (loop)/live/initrd.img
		}
		fi
		menuentry "Tails Live [64-bit]" {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/live/vmlinuz2 findiso=${path}${file} boot=live config live-media=removable apparmor=1 security=apparmor nopersistence noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  quiet
			initrd (loop)/live/initrd2.img
		}
		menuentry "Tails Live [64-bit failsafe]" {
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/live/vmlinuz2 findiso=${path}${file} boot=live config live-media=removable apparmor=1 security=apparmor nopersistence noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  noapic noapm nodma nomce nolapic nomodeset nosmp vga=normal
			initrd (loop)/live/initrd2.img
		}
	else
		missing ${file} ${path}
	fi
}

menuentry "Slackware 14.1 install (DVD)" {
	set file="slackware64-14.1-install-dvd.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/kernels/huge.s/bzImage vga=normal load_ramdisk=1 prompt_ramdisk=0 ro printk.time=0 nomodeset SLACK_KERNEL=huge.s
		initrd (loop)/isolinux/initrd.img
	else
		missing ${file} ${path}
	fi
}

menuentry "Gentoo Minimal Installation CD [64-bit]" {
	set file="install-amd64-minimal.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/isolinux/gentoo root=/dev/ram0 init=/linuxrc dokeymap looptype=squashfs loop=/image.squashfs cdroot initrd=gentoo.igz isoboot=${path}${file} 
		initrd (loop)/isolinux/gentoo.igz 
	else
		missing ${file} ${path}
	fi
}

submenu "OpenSuse Live ISO" --class icon-suse {
	menuentry "openSUSE Tumbleweed GNOME/KDE Live [64-bit]" {
		set file="openSUSE-Tumbleweed-Live-x86_64-Current.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/boot/x86_64/loader/linux isofrom_device=$imgdevpath isofrom_system=${path}${file} LANG=en_US.UTF-8
			initrd (loop)/boot/x86_64/loader/initrd
		else
			missing ${file} ${path}
		fi
	}
	if [ "$pc" ]; then
	menuentry "openSUSE Tumbleweed GNOME/KDE Live [32-bit]" {
		set file="openSUSE-Tumbleweed-Live-i686-Current.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux (loop)/boot/i386/loader/linux isofrom_device=$imgdevpath isofrom_system=${path}${file} LANG=en_US.UTF-8
			initrd (loop)/boot/i386/loader/initrd
		else
			missing ${file} ${path}
		fi
	}
	fi
}

menuentry "Clonezilla Live amd64" {
	set file="clonezilla-live-amd64.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux	(loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap nolocales edd=on nomodeset nodmraid ocs_live_run=\"ocs-live-general\" ocs_live_extra_param=\"\" keyboard-layouts= ocs_live_batch=\"no\" locales= vga=788 ip=frommedia nosplash toram=filesystem.squashfs findiso=${path}${file}
		initrd	(loop)/live/initrd.img
	else
		missing ${file} ${path}
	fi
}

menuentry "GParted Live amd64" --class gparted {
	set file="gparted-live-amd64.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/live/vmlinuz boot=live username=user config components quiet noswap noeject ip= nosplash toram=filesystem.squashfs findiso=${path}${file}
		initrd (loop)/live/initrd.img
	else
		missing ${file} ${path}
	fi
}

menuentry "Parted Magic [32-bit]" {
	set file="pmagic.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		set root=(loop)
		linux	/pmagic/bzImage iso_filename=${path}${file} directory=boot edd=on vga=normal
		initrd	/pmagic/initrd.img /pmagic/fu.img /pmagic/m32.img
	else
		missing ${file} ${path}
	fi
}

submenu "${ubotherv}" {
	menuentry "Ubuntu 15.10 Desktop [64-bit]" {
		set file="ubuntu-15.10-desktop-amd64.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		else
			missing ${file} ${path}
		fi
	}
	menuentry "Ubuntu 14.04 Desktop [64-bit]" {
		set file="ubuntu-14.04.4-desktop-amd64.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		else
			missing ${file} ${path}
		fi
	}
	menuentry "Ubuntu 12.04 Desktop [64-bit]" {
		set file="ubuntu-12.04.5-desktop-amd64.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${path}${file} noprompt noeject
			initrd	(loop)/casper/initrd.lz
		else
			missing ${file} ${path}
		fi
	}
	menuentry "Ubuntu 16.04 Desktop [32-bit]" {
		set file="ubuntu-16.04-desktop-i386.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		else
			missing ${file} ${path}
		fi
	}
	menuentry "Ubuntu 15.10 Desktop [32-bit]" {
		set file="ubuntu-15.10-desktop-i386.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		else
			missing ${file} ${path}
		fi
	}
	if [ "$pc" ]; then
	menuentry "Ubuntu 14.04 Desktop [32-bit]" {
		set file="ubuntu-14.04.4-desktop-i386.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} quiet splash
			initrd	(loop)/casper/initrd.lz
		else
			missing ${file} ${path}
		fi
	}
	menuentry "Ubuntu 12.04 Desktop [32-bit]" {
		set file="ubuntu-12.04.5-desktop-i386.iso"
		if [ -e ${path}${file} ]; then
			booting ${file} ${path}
			loopback loop ${path}${file}
			linux	(loop)/casper/vmlinuz boot=casper iso-scan/filename=${path}${file} noprompt noeject
			initrd	(loop)/casper/initrd.lz
		else
			missing ${file} ${path}
		fi
	}
	fi
}
menuentry "Linux Mint 17.3 [32-bit]" --class linuxmint {
	set file="linuxmint-17.3-32bit.iso"
	if [ -e ${path}${file} ]; then
		booting ${file} ${path}
		loopback loop ${path}${file}
		linux (loop)/casper/vmlinuz file=/cdrom/preseed/linuxmint.seed boot=casper iso-scan/filename=${path}${file} quiet splash --
		initrd (loop)/casper/initrd.lz
	else
		missing ${file} ${path}
	fi
}