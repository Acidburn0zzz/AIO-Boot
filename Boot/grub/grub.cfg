#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub2-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
if [ -s $prefix/grubenv ]; then
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
	probe -u $root --set=partuuid
	if [ x$feature_platform_search_hint = xy ]; then
		#search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1 $partuuid
		search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 $partuuid
	else
		search --no-floppy --fs-uuid --set=root $partuuid
	fi
	font="${prefix}/fonts/unicode.pf2"
fi

if loadfont $font ; then
	set gfxmode=1024x768
	set gfxpayload=1024x768
	load_video
	insmod gfxterm
	insmod png
	terminal_output gfxterm
	background_image -m stretch $prefix/themes/splash.png
fi
if [ x$feature_timeout_style = xy ] ; then
  set timeout_style=menu
  set timeout=15
# Fallback normal timeout code in case the timeout_style feature is
# unavailable.
else
  set timeout=15
fi

if [ "${grub_platform}" == "efi" ]; then
	set efi=1
fi
if [ "${grub_platform}" == "pc" ]; then
	set pc=1
fi

if [ "${grub_platform}" == "efi" ]; then
    set _UEFI_ARCH="${grub_cpu}"
    
    if [ "${grub_cpu}" == "x86_64" ]; then
        set _SPEC_UEFI_ARCH="x64"
    fi
    
    if [ "${grub_cpu}" == "i386" ]; then
        set _SPEC_UEFI_ARCH="ia32"
    fi
fi
export pc
export efi
export _UEFI_ARCH
export _SPEC_UEFI_ARCH
export _SPEC_UEFI_ARCH

source $prefix/lang.cfg;
source $prefix/functions.cfg
source $prefix/main.cfg;

### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/10_linux ###

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/20_linux_xen ###
### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f $prefix/custom.cfg ]; then
	source $prefix/custom.cfg;
fi
#if [ -f  ${config_directory}/custom.cfg ]; then
#  source ${config_directory}/custom.cfg
#elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
#  source $prefix/custom.cfg;
#fi
### END /etc/grub.d/41_custom ###
